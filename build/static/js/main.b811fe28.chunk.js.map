{"version":3,"sources":["axios.js","components/rows/Row.jsx","requests.js","components/banner/Banner.jsx","img/nf_logo.png","components/navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargerRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","axiosInstance","get","request","data","results","getMovies","className","map","movie","index","onClick","movieTrailer","original_title","then","url","console","log","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","api_key","process","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomenceMovies","fetchDocumentariesMovies","Banner","setMovie","Math","floor","random","length","getMovie","style","backgroundImage","backgroundPosition","original_name","overview","Navbar","logo","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b811fe28.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../../axios\";\nimport \"../../styles/Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst image_base_url = \"https://image.tmdb.org/t/p/original/\";\n\nexport default function Row({ title, fetchUrl, isLargerRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function getMovies() {\n      const request = await axiosInstance.get(fetchUrl);\n      //   console.log(\"req\", request.data.results);\n      setMovies(request.data.results);\n    }\n    getMovies();\n  }, [fetchUrl]);\n  //   console.log(movies[0]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      // console.log(\"movie\", movie.original_title);\n      movieTrailer(movie?.original_title || \"\")\n        .then((url) => {\n          console.log(url);\n          // console.log(\"new\", new URL(url).search);\n          const urlParams = new URLSearchParams(new URL(url).search);\n          // console.log(\"urlparams\", urlParams.get(\"v\"));\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"row-title\">{title}</h2>\n      <div className=\"row_posters\">\n        {movies.map((movie, index) => {\n          return (\n            <img\n              className={isLargerRow ? \"row_largerPoster\" : \"row_poster\"}\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={`${image_base_url}${\n                isLargerRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            ></img>\n          );\n        })}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n//\n","import \"dotenv\";\nconst api_key = `${process.env.REACT_APP_TMDM_API_KEY}`;\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${api_key}&language=en-US`,\n  fetchNetflixOriginals: `discover/tv?api_key=${api_key}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${api_key}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${api_key}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${api_key}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${api_key}&with_genres=27`,\n  fetchRomenceMovies: `/discover/movie?api_key=${api_key}&with_genres=10749`,\n  fetchDocumentariesMovies: `/discover/movie?api_key=${api_key}&with_genres=99`,\n};\n\nexport default requests;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../styles/Banner.css\";\nimport axiosInstance from \"../../axios\";\nimport requests from \"../../requests\";\n\nexport default function Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function getMovie() {\n      let request = await axiosInstance.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length) - 1\n        ]\n      );\n    }\n    getMovie();\n  }, []);\n  //   console.log(\"randim movie\", movie);\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n        <h1 className=\"banner_decs\">{movie?.overview}</h1>\n        <div className=\"banner_fadeBottom\"></div>\n      </div>\n    </header>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/nf_logo.d74f1e57.png\";","import React, { useState, useEffect } from \"react\";\nimport \"../../styles/Navbar.css\";\nimport logo from \"../../img/nf_logo.png\";\n\nexport default function Navbar() {\n  //   const [show, setShow] = useState(false);\n  //   useEffect(() => {\n  //     window.addEventListener(\"scroll\", () => {\n  //       if (window.scrollY > 100) {\n  //         setShow(true);\n  //       } else {\n  //         setShow(false);\n  //       }\n  //     });\n  //     return window.removeEventListener(\"scroll\", () => {});\n  //   }, []);\n  return (\n    //   ${show && \"nav_black\"}\n    <div className={`nav`}>\n      <img className=\"nav_logo\" src={logo} alt=\"nf_logo\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Row from \"./components/rows/Row\";\nimport Banner from \"./components/banner/Banner\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport requests from \"./requests\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Banner />\n      <Row\n        title={\"Netflix Originals\"}\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargerRow={true}\n      />\n      <Row title={\"Trending Now\"} fetchUrl={requests.fetchTrending} />\n      <Row title={\"Top Rated\"} fetchUrl={requests.fetchTopRated} />\n      <Row title={\"Action Movies\"} fetchUrl={requests.fetchActionMovies} />\n      <Row title={\"Comedy Movies\"} fetchUrl={requests.fetchComedyMovies} />\n      <Row title={\"Horrow Movies\"} fetchUrl={requests.fetchHorrorMovies} />\n      <Row title={\"Romance Movies\"} fetchUrl={requests.fetchRomenceMovies} />\n      <Row\n        title={\"Documentaries\"}\n        fetchUrl={requests.fetchDocumentariesMovies}\n      />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}